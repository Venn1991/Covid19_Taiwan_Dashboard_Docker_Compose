---
version: '3.7'
x-airflow-common:
  &airflow-common
  # In order to add custom dependencies or upgrade provider packages you can use your extended image.
  # Comment the image line, place your Dockerfile in the directory where you placed the docker-compose.yaml
  # and uncomment the "build" line below, Then run `docker-compose build` to build the images.
  #image: apache/airflow:2.1.2rc1-python3.8
  build: 
    context: .
    dockerfile: airflow.Dockerfile
  environment:
    &airflow-common-env
    AIRFLOW__CORE__EXECUTOR: LocalExecutor
    AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: mysql+mysqldb://aritek:password@mysql:3306/airflow_db
    AIRFLOW__CORE__SQL_ALCHEMY_CONN: mysql+mysqldb://aritek:password@mysql:3306/airflow_db
  volumes:
    - airflow_volume:/airflow
    - ./airflow_covid19_tw/airflow.cfg:/airflow/airflow.cfg
  depends_on:
    &airflow-common-depends-on
    - mysql:
      condition: service_healthy


services:
    mysql:
      build: 
        context: .
        dockerfile: af_mysql.Dockerfile
      command: --max_allowed_packet=1048576000
      networks:
        - web_data_transfer
        - covid_data_transfer
      environment:
        MYSQL_ROOT_PASSWORD: password
      restart: always    
      healthcheck:
        test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
        timeout: 40s
        retries: 10
      volumes:
        - mysql_volume:/var/lib/mysql
        - ./mysql_setting.sql:/docker-entrypoint-initdb.d/mysql_setting.sql

    django:
      build: 
        context: .
        dockerfile: django.Dockerfile
      networks:
        - web_data_transfer
      ports:
        - 8000:8000
      restart: always       
      depends_on:
        mysql:
          condition: service_healthy
      volumes:
        - django_volume:/Covid19_Django_Webapp

    airflow-init:
      <<: *airflow-common
      networks:
        - covid_data_transfer
      command: airflow db init 
      environment:
        <<: *airflow-common-env
        _AIRFLOW_WWW_USER_CREATE: 'true'
        _AIRFLOW_WWW_USER_USERNAME: ${_AIRFLOW_WWW_USER_USERNAME:-aritek}
        _AIRFLOW_WWW_USER_PASSWORD: ${_AIRFLOW_WWW_USER_PASSWORD:-password}
      depends_on:
        mysql:
          condition: service_healthy

    airflow-webserver:
      <<: *airflow-common
      networks:
        - covid_data_transfer
      command: webserver
      ports:
        - 8080:8080
      restart: always
      depends_on:
        airflow-init:
          condition: service_completed_successfully

    airflow-scheduler:
      <<: *airflow-common
  #    entrypoint: ./create_mysql_conn.sh
      networks:
        - covid_data_transfer
      #command: bash -c "./create_mysql_conn.sh && airflow scheduler"
      command: airflow scheduler
      restart: always
      depends_on:
        airflow-init:
          condition: service_completed_successfully

networks:
  web_data_transfer:
  covid_data_transfer:

volumes:
  airflow_volume:
  mysql_volume:
  django_volume: